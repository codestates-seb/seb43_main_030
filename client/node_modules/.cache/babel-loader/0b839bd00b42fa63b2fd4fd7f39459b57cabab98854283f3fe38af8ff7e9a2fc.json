{"ast":null,"code":"import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport { persistReducer } from 'redux-persist';\nimport storageSession from 'redux-persist/lib/storage/session';\nimport { setAreaFilter, setCenter, setKinderGartens, setUser, setCurUser, setCurProfile, setInputValue, setSearchValue, setAuth, setActiveIndex, setCategory, setCommInputValue, setTempCommInputValue, setSearchClickState } from '../actions/areaFilterActions';\n\n// 상태 정의\nconst initialState = {\n  areaFilter: 0,\n  center: {\n    lat: 37.568177,\n    lng: 126.992217\n  },\n  kinderGartens: [],\n  user: [],\n  curUser: {},\n  curProfile: {},\n  inputValue: '',\n  searchValue: '',\n  auth: false,\n  activeIndex: 0,\n  category: 'notification',\n  commInputValue: '',\n  tempCommInputValue: '',\n  searchClickState: false\n};\nconst areaFilterReducer = createReducer(initialState.areaFilter, builder => {\n  builder.addCase(setAreaFilter, (state, action) => action.payload);\n});\nconst centerReducer = createReducer(initialState.center, builder => {\n  builder.addCase(setCenter, (state, action) => action.payload);\n});\nconst kinderGartensReducer = createReducer(initialState.kinderGartens, builder => {\n  builder.addCase(setKinderGartens, (state, action) => action.payload);\n});\nconst userReducer = createReducer(initialState.user, builder => {\n  builder.addCase(setUser, (state, action) => action.payload);\n});\nconst curUserReducer = createReducer(initialState.curUser, builder => {\n  builder.addCase(setCurUser, (state, action) => action.payload);\n});\nconst curProfileReducer = createReducer(initialState.curProfile, builder => {\n  builder.addCase(setCurProfile, (state, action) => action.payload);\n});\nconst inputValueReducer = createReducer(initialState.inputValue, builder => {\n  builder.addCase(setInputValue, (state, action) => action.payload);\n});\nconst searchValueReducer = createReducer(initialState.searchValue, builder => {\n  builder.addCase(setSearchValue, (state, action) => action.payload);\n});\nconst authReducer = createReducer(initialState.auth, builder => {\n  builder.addCase(setAuth, (state, action) => action.payload);\n});\nconst activeIndexReducer = createReducer(initialState.activeIndex, builder => {\n  builder.addCase(setActiveIndex, (state, action) => action.payload);\n});\nconst categoryReducer = createReducer(initialState.category, builder => {\n  builder.addCase(setCategory, (state, action) => action.payload);\n});\nconst commInputValueReducer = createReducer(initialState.commInputValue, builder => {\n  builder.addCase(setCommInputValue, (state, action) => action.payload);\n});\nconst tempCommInputValueReducer = createReducer(initialState.tempCommInputValue, builder => {\n  builder.addCase(setTempCommInputValue, (state, action) => action.payload);\n});\nconst searchClickStateReducer = createReducer(initialState.searchClickState, builder => {\n  builder.addCase(setSearchClickState, (state, action) => action.payload);\n});\nconst rootReducer = combineReducers({\n  areaFilter: areaFilterReducer,\n  center: centerReducer,\n  kinderGartens: kinderGartensReducer,\n  user: userReducer,\n  curUser: curUserReducer,\n  curProfile: curProfileReducer,\n  inputValue: inputValueReducer,\n  searchValue: searchValueReducer,\n  auth: authReducer,\n  activeIndex: activeIndexReducer,\n  category: categoryReducer,\n  commInputValue: commInputValueReducer,\n  tempCommInputValue: tempCommInputValueReducer,\n  searchClickState: searchClickStateReducer\n});\nconst persistConfig = {\n  key: 'root',\n  storage: storageSession,\n  // 사용할 스토리지를 정의해요.\n  whitelist: ['curUser', 'user', 'curProfile', 'kinderGartens', 'areaFilter', 'cetner', 'inputValue', 'searchValue', 'auth', 'activeIndex', 'category', 'commInputValue', 'tempCommInputValue', 'searchClickState'] // 유지 할 데이터를 정의해요\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n// reducer와 위에서 설정 한 persist설정을 합쳐요\n\nexport default persistedReducer;","map":{"version":3,"names":["createReducer","combineReducers","persistReducer","storageSession","setAreaFilter","setCenter","setKinderGartens","setUser","setCurUser","setCurProfile","setInputValue","setSearchValue","setAuth","setActiveIndex","setCategory","setCommInputValue","setTempCommInputValue","setSearchClickState","initialState","areaFilter","center","lat","lng","kinderGartens","user","curUser","curProfile","inputValue","searchValue","auth","activeIndex","category","commInputValue","tempCommInputValue","searchClickState","areaFilterReducer","builder","addCase","state","action","payload","centerReducer","kinderGartensReducer","userReducer","curUserReducer","curProfileReducer","inputValueReducer","searchValueReducer","authReducer","activeIndexReducer","categoryReducer","commInputValueReducer","tempCommInputValueReducer","searchClickStateReducer","rootReducer","persistConfig","key","storage","whitelist","persistedReducer"],"sources":["/Users/jieun/Desktop/main-project/idle/src/reducers/areaFilterReducers.jsx"],"sourcesContent":["import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport { persistReducer } from 'redux-persist';\nimport storageSession from 'redux-persist/lib/storage/session';\nimport {\n  setAreaFilter,\n  setCenter,\n  setKinderGartens,\n  setUser,\n  setCurUser,\n  setCurProfile,\n  setInputValue,\n  setSearchValue,\n  setAuth,\n  setActiveIndex,\n  setCategory,\n  setCommInputValue,\n  setTempCommInputValue,\n  setSearchClickState,\n} from '../actions/areaFilterActions';\n\n// 상태 정의\nconst initialState = {\n  areaFilter: 0,\n  center: {\n    lat: 37.568177,\n    lng: 126.992217,\n  },\n  kinderGartens: [],\n  user: [],\n  curUser: {},\n  curProfile: {},\n  inputValue: '',\n  searchValue: '',\n  auth: false,\n  activeIndex: 0,\n  category: 'notification',\n  commInputValue: '',\n  tempCommInputValue: '',\n  searchClickState: false,\n};\n\nconst areaFilterReducer = createReducer(initialState.areaFilter, builder => {\n  builder.addCase(setAreaFilter, (state, action) => action.payload);\n});\n\nconst centerReducer = createReducer(initialState.center, builder => {\n  builder.addCase(setCenter, (state, action) => action.payload);\n});\n\nconst kinderGartensReducer = createReducer(\n  initialState.kinderGartens,\n  builder => {\n    builder.addCase(setKinderGartens, (state, action) => action.payload);\n  },\n);\n\nconst userReducer = createReducer(initialState.user, builder => {\n  builder.addCase(setUser, (state, action) => action.payload);\n});\n\nconst curUserReducer = createReducer(initialState.curUser, builder => {\n  builder.addCase(setCurUser, (state, action) => action.payload);\n});\n\nconst curProfileReducer = createReducer(initialState.curProfile, builder => {\n  builder.addCase(setCurProfile, (state, action) => action.payload);\n});\n\nconst inputValueReducer = createReducer(initialState.inputValue, builder => {\n  builder.addCase(setInputValue, (state, action) => action.payload);\n});\n\nconst searchValueReducer = createReducer(initialState.searchValue, builder => {\n  builder.addCase(setSearchValue, (state, action) => action.payload);\n});\n\nconst authReducer = createReducer(initialState.auth, builder => {\n  builder.addCase(setAuth, (state, action) => action.payload);\n});\n\nconst activeIndexReducer = createReducer(initialState.activeIndex, builder => {\n  builder.addCase(setActiveIndex, (state, action) => action.payload);\n});\n\nconst categoryReducer = createReducer(initialState.category, builder => {\n  builder.addCase(setCategory, (state, action) => action.payload);\n});\n\nconst commInputValueReducer = createReducer(\n  initialState.commInputValue,\n  builder => {\n    builder.addCase(setCommInputValue, (state, action) => action.payload);\n  },\n);\n\nconst tempCommInputValueReducer = createReducer(\n  initialState.tempCommInputValue,\n  builder => {\n    builder.addCase(setTempCommInputValue, (state, action) => action.payload);\n  },\n);\n\nconst searchClickStateReducer = createReducer(\n  initialState.searchClickState,\n  builder => {\n    builder.addCase(setSearchClickState, (state, action) => action.payload);\n  },\n);\n\nconst rootReducer = combineReducers({\n  areaFilter: areaFilterReducer,\n  center: centerReducer,\n  kinderGartens: kinderGartensReducer,\n  user: userReducer,\n  curUser: curUserReducer,\n  curProfile: curProfileReducer,\n  inputValue: inputValueReducer,\n  searchValue: searchValueReducer,\n  auth: authReducer,\n  activeIndex: activeIndexReducer,\n  category: categoryReducer,\n  commInputValue: commInputValueReducer,\n  tempCommInputValue: tempCommInputValueReducer,\n  searchClickState: searchClickStateReducer,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage: storageSession, // 사용할 스토리지를 정의해요.\n  whitelist: [\n    'curUser',\n    'user',\n    'curProfile',\n    'kinderGartens',\n    'areaFilter',\n    'cetner',\n    'inputValue',\n    'searchValue',\n    'auth',\n    'activeIndex',\n    'category',\n    'commInputValue',\n    'tempCommInputValue',\n    'searchClickState',\n  ], // 유지 할 데이터를 정의해요\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n// reducer와 위에서 설정 한 persist설정을 합쳐요\n\nexport default persistedReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}