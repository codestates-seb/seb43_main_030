{"ast":null,"code":"var _jsxFileName = \"/Users/jieun/Desktop/main-project/idle/src/pages/OauthLogin.jsx\",\n  _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport { PulseLoader } from 'react-spinners';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { setAuth, setCurUser, setUser, setCurProfile } from '../actions/areaFilterActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OauthLogin() {\n  _s();\n  const navi = useNavigate();\n  const dispatch = useDispatch();\n  const url = new URL(window.location.href);\n  const authorization = url.searchParams.get('Authorization');\n  const refresh = url.searchParams.get('Refresh');\n  const getUsers = () => {\n    if (localStorage.getItem('token')) {\n      axios.get(`${process.env.REACT_APP_API_URL}/users/profile`, {\n        headers: {\n          Authorization: localStorage.getItem('token')\n        }\n      }).then(res => {\n        dispatch(setUser(res.data));\n        dispatch(setCurUser(res.data[0]));\n        dispatch(setCurProfile(res.data[0]));\n        navi('/');\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  // 만약 authorization 이 있는데, role 이 게스트야\n  // 그러면 이메일이랑, 롤 선택하는로 가 => patch 로 보내려면 token을 같이 보내야된다며,,\n\n  if (authorization) {\n    dispatch(setAuth(true));\n    localStorage.setItem('token', authorization);\n    localStorage.setItem('tokenRefresh', refresh);\n    getUsers();\n    // if 만약 role 이 guest면 모달이던 그걸 띄워 그래서 아이디랑 이걸 입력하게 하는거야\n    // 근데 role이 guest가 아니면 걍 메인으로 가\n  } else {\n    alert('로그인에 실패했습니다.');\n    navi('/login');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-center h-[50vh] w-[100%]\",\n    children: /*#__PURE__*/_jsxDEV(PulseLoader, {\n      color: \"#FFD337\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(OauthLogin, \"xzu0yggEL+wpBS0MCfWB3syvNkM=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = OauthLogin;\nexport default OauthLogin;\nvar _c;\n$RefreshReg$(_c, \"OauthLogin\");","map":{"version":3,"names":["useNavigate","PulseLoader","useDispatch","useSelector","axios","setAuth","setCurUser","setUser","setCurProfile","jsxDEV","_jsxDEV","OauthLogin","_s","navi","dispatch","url","URL","window","location","href","authorization","searchParams","get","refresh","getUsers","localStorage","getItem","process","env","REACT_APP_API_URL","headers","Authorization","then","res","data","catch","err","console","log","setItem","alert","className","children","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jieun/Desktop/main-project/idle/src/pages/OauthLogin.jsx"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\nimport { PulseLoader } from 'react-spinners';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport axios from 'axios';\nimport {\n  setAuth,\n  setCurUser,\n  setUser,\n  setCurProfile,\n} from '../actions/areaFilterActions';\n\nfunction OauthLogin() {\n  const navi = useNavigate();\n  const dispatch = useDispatch();\n\n  const url = new URL(window.location.href);\n  const authorization = url.searchParams.get('Authorization');\n  const refresh = url.searchParams.get('Refresh');\n\n  const getUsers = () => {\n    if (localStorage.getItem('token')) {\n      axios\n        .get(`${process.env.REACT_APP_API_URL}/users/profile`, {\n          headers: {\n            Authorization: localStorage.getItem('token'),\n          },\n        })\n        .then(res => {\n          dispatch(setUser(res.data));\n          dispatch(setCurUser(res.data[0]));\n          dispatch(setCurProfile(res.data[0]));\n          navi('/');\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n  };\n\n  // 만약 authorization 이 있는데, role 이 게스트야\n  // 그러면 이메일이랑, 롤 선택하는로 가 => patch 로 보내려면 token을 같이 보내야된다며,,\n\n  if (authorization) {\n    dispatch(setAuth(true));\n    localStorage.setItem('token', authorization);\n    localStorage.setItem('tokenRefresh', refresh);\n    getUsers();\n    // if 만약 role 이 guest면 모달이던 그걸 띄워 그래서 아이디랑 이걸 입력하게 하는거야\n    // 근데 role이 guest가 아니면 걍 메인으로 가\n  } else {\n    alert('로그인에 실패했습니다.');\n    navi('/login');\n  }\n\n  return (\n    <div className=\"flex-center h-[50vh] w-[100%]\">\n      <PulseLoader color=\"#FFD337\" />\n    </div>\n  );\n}\n\nexport default OauthLogin;\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,OAAO,EACPC,UAAU,EACVC,OAAO,EACPC,aAAa,QACR,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGb,WAAW,CAAC,CAAC;EAC1B,MAAMc,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAMa,GAAG,GAAG,IAAIC,GAAG,CAACC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAC;EACzC,MAAMC,aAAa,GAAGL,GAAG,CAACM,YAAY,CAACC,GAAG,CAAC,eAAe,CAAC;EAC3D,MAAMC,OAAO,GAAGR,GAAG,CAACM,YAAY,CAACC,GAAG,CAAC,SAAS,CAAC;EAE/C,MAAME,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;MACjCtB,KAAK,CACFkB,GAAG,CAAE,GAAEK,OAAO,CAACC,GAAG,CAACC,iBAAkB,gBAAe,EAAE;QACrDC,OAAO,EAAE;UACPC,aAAa,EAAEN,YAAY,CAACC,OAAO,CAAC,OAAO;QAC7C;MACF,CAAC,CAAC,CACDM,IAAI,CAACC,GAAG,IAAI;QACXnB,QAAQ,CAACP,OAAO,CAAC0B,GAAG,CAACC,IAAI,CAAC,CAAC;QAC3BpB,QAAQ,CAACR,UAAU,CAAC2B,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACjCpB,QAAQ,CAACN,aAAa,CAACyB,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACpCrB,IAAI,CAAC,GAAG,CAAC;MACX,CAAC,CAAC,CACDsB,KAAK,CAACC,GAAG,IAAI;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB,CAAC,CAAC;IACN;EACF,CAAC;;EAED;EACA;;EAEA,IAAIhB,aAAa,EAAE;IACjBN,QAAQ,CAACT,OAAO,CAAC,IAAI,CAAC,CAAC;IACvBoB,YAAY,CAACc,OAAO,CAAC,OAAO,EAAEnB,aAAa,CAAC;IAC5CK,YAAY,CAACc,OAAO,CAAC,cAAc,EAAEhB,OAAO,CAAC;IAC7CC,QAAQ,CAAC,CAAC;IACV;IACA;EACF,CAAC,MAAM;IACLgB,KAAK,CAAC,cAAc,CAAC;IACrB3B,IAAI,CAAC,QAAQ,CAAC;EAChB;EAEA,oBACEH,OAAA;IAAK+B,SAAS,EAAC,+BAA+B;IAAAC,QAAA,eAC5ChC,OAAA,CAACT,WAAW;MAAC0C,KAAK,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEV;AAACnC,EAAA,CAhDQD,UAAU;EAAA,QACJX,WAAW,EACPE,WAAW;AAAA;AAAA8C,EAAA,GAFrBrC,UAAU;AAkDnB,eAAeA,UAAU;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}