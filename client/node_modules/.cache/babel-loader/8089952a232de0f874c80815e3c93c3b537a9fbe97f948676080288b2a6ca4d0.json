{"ast":null,"code":"\"use strict\";\n\n/*\nReact-Quill\nhttps://github.com/zenoamaro/react-quill\n*/\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n  return r;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nvar react_1 = __importDefault(require(\"react\"));\nvar react_dom_1 = __importDefault(require(\"react-dom\"));\nvar isEqual_1 = __importDefault(require(\"lodash/isEqual\"));\nvar quill_1 = __importDefault(require(\"quill\"));\nvar ReactQuill = /** @class */function (_super) {\n  __extends(ReactQuill, _super);\n  function ReactQuill(props) {\n    var _this = _super.call(this, props) || this;\n    /*\n    Changing one of these props should cause a full re-render and a\n    re-instantiation of the Quill editor.\n    */\n    _this.dirtyProps = ['modules', 'formats', 'bounds', 'theme', 'children'];\n    /*\n    Changing one of these props should cause a regular update. These are mostly\n    props that act on the container, rather than the quillized editing area.\n    */\n    _this.cleanProps = ['id', 'className', 'style', 'placeholder', 'tabIndex', 'onChange', 'onChangeSelection', 'onFocus', 'onBlur', 'onKeyPress', 'onKeyDown', 'onKeyUp'];\n    _this.state = {\n      generation: 0\n    };\n    /*\n    Tracks the internal selection of the Quill editor\n    */\n    _this.selection = null;\n    _this.onEditorChange = function (eventName, rangeOrDelta, oldRangeOrDelta, source) {\n      var _a, _b, _c, _d;\n      if (eventName === 'text-change') {\n        (_b = (_a = _this).onEditorChangeText) === null || _b === void 0 ? void 0 : _b.call(_a, _this.editor.root.innerHTML, rangeOrDelta, source, _this.unprivilegedEditor);\n      } else if (eventName === 'selection-change') {\n        (_d = (_c = _this).onEditorChangeSelection) === null || _d === void 0 ? void 0 : _d.call(_c, rangeOrDelta, source, _this.unprivilegedEditor);\n      }\n    };\n    var value = _this.isControlled() ? props.value : props.defaultValue;\n    _this.value = value !== null && value !== void 0 ? value : '';\n    return _this;\n  }\n  ReactQuill.prototype.validateProps = function (props) {\n    var _a;\n    if (react_1.default.Children.count(props.children) > 1) throw new Error('The Quill editing area can only be composed of a single React element.');\n    if (react_1.default.Children.count(props.children)) {\n      var child = react_1.default.Children.only(props.children);\n      if (((_a = child) === null || _a === void 0 ? void 0 : _a.type) === 'textarea') throw new Error('Quill does not support editing on a <textarea>. Use a <div> instead.');\n    }\n    if (this.lastDeltaChangeSet && props.value === this.lastDeltaChangeSet) throw new Error('You are passing the `delta` object from the `onChange` event back ' + 'as `value`. You most probably want `editor.getContents()` instead. ' + 'See: https://github.com/zenoamaro/react-quill#using-deltas');\n  };\n  ReactQuill.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n    var _this = this;\n    var _a;\n    this.validateProps(nextProps);\n    // If the editor hasn't been instantiated yet, or the component has been\n    // regenerated, we already know we should update.\n    if (!this.editor || this.state.generation !== nextState.generation) {\n      return true;\n    }\n    // Handle value changes in-place\n    if ('value' in nextProps) {\n      var prevContents = this.getEditorContents();\n      var nextContents = (_a = nextProps.value, _a !== null && _a !== void 0 ? _a : '');\n      // NOTE: Seeing that Quill is missing a way to prevent edits, we have to\n      //       settle for a hybrid between controlled and uncontrolled mode. We\n      //       can't prevent the change, but we'll still override content\n      //       whenever `value` differs from current state.\n      // NOTE: Comparing an HTML string and a Quill Delta will always trigger a\n      //       change, regardless of whether they represent the same document.\n      if (!this.isEqualValue(nextContents, prevContents)) {\n        this.setEditorContents(this.editor, nextContents);\n      }\n    }\n    // Handle read-only changes in-place\n    if (nextProps.readOnly !== this.props.readOnly) {\n      this.setEditorReadOnly(this.editor, nextProps.readOnly);\n    }\n    // Clean and Dirty props require a render\n    return __spreadArrays(this.cleanProps, this.dirtyProps).some(function (prop) {\n      return !isEqual_1.default(nextProps[prop], _this.props[prop]);\n    });\n  };\n  ReactQuill.prototype.shouldComponentRegenerate = function (nextProps) {\n    var _this = this;\n    // Whenever a `dirtyProp` changes, the editor needs reinstantiation.\n    return this.dirtyProps.some(function (prop) {\n      return !isEqual_1.default(nextProps[prop], _this.props[prop]);\n    });\n  };\n  ReactQuill.prototype.componentDidMount = function () {\n    this.instantiateEditor();\n    this.setEditorContents(this.editor, this.getEditorContents());\n  };\n  ReactQuill.prototype.componentWillUnmount = function () {\n    this.destroyEditor();\n  };\n  ReactQuill.prototype.componentDidUpdate = function (prevProps, prevState) {\n    var _this = this;\n    // If we're changing one of the `dirtyProps`, the entire Quill Editor needs\n    // to be re-instantiated. Regenerating the editor will cause the whole tree,\n    // including the container, to be cleaned up and re-rendered from scratch.\n    // Store the contents so they can be restored later.\n    if (this.editor && this.shouldComponentRegenerate(prevProps)) {\n      var delta = this.editor.getContents();\n      var selection = this.editor.getSelection();\n      this.regenerationSnapshot = {\n        delta: delta,\n        selection: selection\n      };\n      this.setState({\n        generation: this.state.generation + 1\n      });\n      this.destroyEditor();\n    }\n    // The component has been regenerated, so it must be re-instantiated, and\n    // its content must be restored to the previous values from the snapshot.\n    if (this.state.generation !== prevState.generation) {\n      var _a = this.regenerationSnapshot,\n        delta = _a.delta,\n        selection_1 = _a.selection;\n      delete this.regenerationSnapshot;\n      this.instantiateEditor();\n      var editor_1 = this.editor;\n      editor_1.setContents(delta);\n      postpone(function () {\n        return _this.setEditorSelection(editor_1, selection_1);\n      });\n    }\n  };\n  ReactQuill.prototype.instantiateEditor = function () {\n    if (this.editor) {\n      this.hookEditor(this.editor);\n    } else {\n      this.editor = this.createEditor(this.getEditingArea(), this.getEditorConfig());\n    }\n  };\n  ReactQuill.prototype.destroyEditor = function () {\n    if (!this.editor) return;\n    this.unhookEditor(this.editor);\n  };\n  /*\n  We consider the component to be controlled if `value` is being sent in props.\n  */\n  ReactQuill.prototype.isControlled = function () {\n    return 'value' in this.props;\n  };\n  ReactQuill.prototype.getEditorConfig = function () {\n    return {\n      bounds: this.props.bounds,\n      formats: this.props.formats,\n      modules: this.props.modules,\n      placeholder: this.props.placeholder,\n      readOnly: this.props.readOnly,\n      scrollingContainer: this.props.scrollingContainer,\n      tabIndex: this.props.tabIndex,\n      theme: this.props.theme\n    };\n  };\n  ReactQuill.prototype.getEditor = function () {\n    if (!this.editor) throw new Error('Accessing non-instantiated editor');\n    return this.editor;\n  };\n  /**\n  Creates an editor on the given element. The editor will be passed the\n  configuration, have its events bound,\n  */\n  ReactQuill.prototype.createEditor = function (element, config) {\n    var editor = new quill_1.default(element, config);\n    if (config.tabIndex != null) {\n      this.setEditorTabIndex(editor, config.tabIndex);\n    }\n    this.hookEditor(editor);\n    return editor;\n  };\n  ReactQuill.prototype.hookEditor = function (editor) {\n    // Expose the editor on change events via a weaker, unprivileged proxy\n    // object that does not allow accidentally modifying editor state.\n    this.unprivilegedEditor = this.makeUnprivilegedEditor(editor);\n    // Using `editor-change` allows picking up silent updates, like selection\n    // changes on typing.\n    editor.on('editor-change', this.onEditorChange);\n  };\n  ReactQuill.prototype.unhookEditor = function (editor) {\n    editor.off('editor-change', this.onEditorChange);\n  };\n  ReactQuill.prototype.getEditorContents = function () {\n    return this.value;\n  };\n  ReactQuill.prototype.getEditorSelection = function () {\n    return this.selection;\n  };\n  /*\n  True if the value is a Delta instance or a Delta look-alike.\n  */\n  ReactQuill.prototype.isDelta = function (value) {\n    return value && value.ops;\n  };\n  /*\n  Special comparison function that knows how to compare Deltas.\n  */\n  ReactQuill.prototype.isEqualValue = function (value, nextValue) {\n    if (this.isDelta(value) && this.isDelta(nextValue)) {\n      return isEqual_1.default(value.ops, nextValue.ops);\n    } else {\n      return isEqual_1.default(value, nextValue);\n    }\n  };\n  /*\n  Replace the contents of the editor, but keep the previous selection hanging\n  around so that the cursor won't move.\n  */\n  ReactQuill.prototype.setEditorContents = function (editor, value) {\n    var _this = this;\n    this.value = value;\n    var sel = this.getEditorSelection();\n    if (typeof value === 'string') {\n      editor.setContents(editor.clipboard.convert(value));\n    } else {\n      editor.setContents(value);\n    }\n    postpone(function () {\n      return _this.setEditorSelection(editor, sel);\n    });\n  };\n  ReactQuill.prototype.setEditorSelection = function (editor, range) {\n    this.selection = range;\n    if (range) {\n      // Validate bounds before applying.\n      var length_1 = editor.getLength();\n      range.index = Math.max(0, Math.min(range.index, length_1 - 1));\n      range.length = Math.max(0, Math.min(range.length, length_1 - 1 - range.index));\n      editor.setSelection(range);\n    }\n  };\n  ReactQuill.prototype.setEditorTabIndex = function (editor, tabIndex) {\n    var _a, _b;\n    if ((_b = (_a = editor) === null || _a === void 0 ? void 0 : _a.scroll) === null || _b === void 0 ? void 0 : _b.domNode) {\n      editor.scroll.domNode.tabIndex = tabIndex;\n    }\n  };\n  ReactQuill.prototype.setEditorReadOnly = function (editor, value) {\n    if (value) {\n      editor.disable();\n    } else {\n      editor.enable();\n    }\n  };\n  /*\n  Returns a weaker, unprivileged proxy object that only exposes read-only\n  accessors found on the editor instance, without any state-modifying methods.\n  */\n  ReactQuill.prototype.makeUnprivilegedEditor = function (editor) {\n    var e = editor;\n    return {\n      getHTML: function () {\n        return e.root.innerHTML;\n      },\n      getLength: e.getLength.bind(e),\n      getText: e.getText.bind(e),\n      getContents: e.getContents.bind(e),\n      getSelection: e.getSelection.bind(e),\n      getBounds: e.getBounds.bind(e)\n    };\n  };\n  ReactQuill.prototype.getEditingArea = function () {\n    if (!this.editingArea) {\n      throw new Error('Instantiating on missing editing area');\n    }\n    var element = react_dom_1.default.findDOMNode(this.editingArea);\n    if (!element) {\n      throw new Error('Cannot find element for editing area');\n    }\n    if (element.nodeType === 3) {\n      throw new Error('Editing area cannot be a text node');\n    }\n    return element;\n  };\n  /*\n  Renders an editor area, unless it has been provided one to clone.\n  */\n  ReactQuill.prototype.renderEditingArea = function () {\n    var _this = this;\n    var _a = this.props,\n      children = _a.children,\n      preserveWhitespace = _a.preserveWhitespace;\n    var generation = this.state.generation;\n    var properties = {\n      key: generation,\n      ref: function (instance) {\n        _this.editingArea = instance;\n      }\n    };\n    if (react_1.default.Children.count(children)) {\n      return react_1.default.cloneElement(react_1.default.Children.only(children), properties);\n    }\n    return preserveWhitespace ? react_1.default.createElement(\"pre\", __assign({}, properties)) : react_1.default.createElement(\"div\", __assign({}, properties));\n  };\n  ReactQuill.prototype.render = function () {\n    var _a;\n    return react_1.default.createElement(\"div\", {\n      id: this.props.id,\n      style: this.props.style,\n      key: this.state.generation,\n      className: \"quill \" + (_a = this.props.className, _a !== null && _a !== void 0 ? _a : ''),\n      onKeyPress: this.props.onKeyPress,\n      onKeyDown: this.props.onKeyDown,\n      onKeyUp: this.props.onKeyUp\n    }, this.renderEditingArea());\n  };\n  ReactQuill.prototype.onEditorChangeText = function (value, delta, source, editor) {\n    var _a, _b;\n    if (!this.editor) return;\n    // We keep storing the same type of value as what the user gives us,\n    // so that value comparisons will be more stable and predictable.\n    var nextContents = this.isDelta(this.value) ? editor.getContents() : editor.getHTML();\n    if (nextContents !== this.getEditorContents()) {\n      // Taint this `delta` object, so we can recognize whether the user\n      // is trying to send it back as `value`, preventing a likely loop.\n      this.lastDeltaChangeSet = delta;\n      this.value = nextContents;\n      (_b = (_a = this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, value, delta, source, editor);\n    }\n  };\n  ReactQuill.prototype.onEditorChangeSelection = function (nextSelection, source, editor) {\n    var _a, _b, _c, _d, _e, _f;\n    if (!this.editor) return;\n    var currentSelection = this.getEditorSelection();\n    var hasGainedFocus = !currentSelection && nextSelection;\n    var hasLostFocus = currentSelection && !nextSelection;\n    if (isEqual_1.default(nextSelection, currentSelection)) return;\n    this.selection = nextSelection;\n    (_b = (_a = this.props).onChangeSelection) === null || _b === void 0 ? void 0 : _b.call(_a, nextSelection, source, editor);\n    if (hasGainedFocus) {\n      (_d = (_c = this.props).onFocus) === null || _d === void 0 ? void 0 : _d.call(_c, nextSelection, source, editor);\n    } else if (hasLostFocus) {\n      (_f = (_e = this.props).onBlur) === null || _f === void 0 ? void 0 : _f.call(_e, currentSelection, source, editor);\n    }\n  };\n  ReactQuill.prototype.focus = function () {\n    if (!this.editor) return;\n    this.editor.focus();\n  };\n  ReactQuill.prototype.blur = function () {\n    if (!this.editor) return;\n    this.selection = null;\n    this.editor.blur();\n  };\n  ReactQuill.displayName = 'React Quill';\n  /*\n  Export Quill to be able to call `register`\n  */\n  ReactQuill.Quill = quill_1.default;\n  ReactQuill.defaultProps = {\n    theme: 'snow',\n    modules: {},\n    readOnly: false\n  };\n  return ReactQuill;\n}(react_1.default.Component);\n/*\nSmall helper to execute a function in the next micro-tick.\n*/\nfunction postpone(fn) {\n  Promise.resolve().then(fn);\n}\nmodule.exports = ReactQuill;","map":{"version":3,"names":["react_1","__importDefault","require","react_dom_1","isEqual_1","quill_1","ReactQuill","_super","__extends","props","_this","call","dirtyProps","cleanProps","state","generation","selection","onEditorChange","eventName","rangeOrDelta","oldRangeOrDelta","source","_b","_a","onEditorChangeText","editor","root","innerHTML","unprivilegedEditor","_d","_c","onEditorChangeSelection","value","isControlled","defaultValue","prototype","validateProps","default","Children","count","children","Error","child","only","type","lastDeltaChangeSet","shouldComponentUpdate","nextProps","nextState","prevContents","getEditorContents","nextContents","isEqualValue","setEditorContents","readOnly","setEditorReadOnly","__spreadArrays","some","prop","shouldComponentRegenerate","componentDidMount","instantiateEditor","componentWillUnmount","destroyEditor","componentDidUpdate","prevProps","prevState","delta","getContents","getSelection","regenerationSnapshot","setState","selection_1","editor_1","setContents","postpone","setEditorSelection","hookEditor","createEditor","getEditingArea","getEditorConfig","unhookEditor","bounds","formats","modules","placeholder","scrollingContainer","tabIndex","theme","getEditor","element","config","setEditorTabIndex","makeUnprivilegedEditor","on","off","getEditorSelection","isDelta","ops","nextValue","sel","clipboard","convert","range","length_1","getLength","index","Math","max","min","length","setSelection","scroll","domNode","disable","enable","e","getHTML","bind","getText","getBounds","editingArea","findDOMNode","nodeType","renderEditingArea","preserveWhitespace","properties","key","ref","instance","cloneElement","createElement","__assign","render","id","style","className","onKeyPress","onKeyDown","onKeyUp","onChange","nextSelection","currentSelection","hasGainedFocus","hasLostFocus","onChangeSelection","onFocus","_f","_e","onBlur","focus","blur","displayName","Quill","defaultProps","Component","fn","Promise","resolve","then","module","exports"],"sources":["/Users/jieun/Desktop/main-project/idle/node_modules/react-quill/src/index.tsx"],"sourcesContent":["/*\nReact-Quill\nhttps://github.com/zenoamaro/react-quill\n*/\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport isEqual from 'lodash/isEqual';\n\nimport Quill, {\n  QuillOptionsStatic,\n  DeltaStatic,\n  RangeStatic,\n  BoundsStatic,\n  StringMap,\n  Sources,\n} from 'quill';\n\n// Merged namespace hack to export types along with default object\n// See: https://github.com/Microsoft/TypeScript/issues/2719\nnamespace ReactQuill {\n  export type Value = string | DeltaStatic;\n  export type Range = RangeStatic | null;\n\n  export interface QuillOptions extends QuillOptionsStatic {\n    tabIndex?: number,\n  }\n\n  export interface ReactQuillProps {\n    bounds?: string | HTMLElement,\n    children?: React.ReactElement<any>,\n    className?: string,\n    defaultValue?: Value,\n    formats?: string[],\n    id?: string,\n    modules?: StringMap,\n    onChange?(\n      value: string,\n      delta: DeltaStatic,\n      source: Sources,\n      editor: UnprivilegedEditor,\n    ): void,\n    onChangeSelection?(\n      selection: Range,\n      source: Sources,\n      editor: UnprivilegedEditor,\n    ): void,\n    onFocus?(\n      selection: Range,\n      source: Sources,\n      editor: UnprivilegedEditor,\n    ): void,\n    onBlur?(\n      previousSelection: Range,\n      source: Sources,\n      editor: UnprivilegedEditor,\n    ): void,\n    onKeyDown?: React.EventHandler<any>,\n    onKeyPress?: React.EventHandler<any>,\n    onKeyUp?: React.EventHandler<any>,\n    placeholder?: string,\n    preserveWhitespace?: boolean,\n    readOnly?: boolean,\n    scrollingContainer?: string | HTMLElement,\n    style?: React.CSSProperties,\n    tabIndex?: number,\n    theme?: string,\n    value?: Value,\n  }\n\n  export interface UnprivilegedEditor {\n    getLength(): number;\n    getText(index?: number, length?: number): string;\n    getHTML(): string;\n    getBounds(index: number, length?: number): BoundsStatic;\n    getSelection(focus?: boolean): RangeStatic;\n    getContents(index?: number, length?: number): DeltaStatic;\n  }\n}\n\n// Re-import everything from namespace into scope for comfort\nimport Value = ReactQuill.Value;\nimport Range = ReactQuill.Range;\nimport QuillOptions = ReactQuill.QuillOptions;\nimport ReactQuillProps = ReactQuill.ReactQuillProps;\nimport UnprivilegedEditor = ReactQuill.UnprivilegedEditor;\n\ninterface ReactQuillState {\n  generation: number,\n}\n\nclass ReactQuill extends React.Component<ReactQuillProps, ReactQuillState> {\n\n  static displayName = 'React Quill'\n\n  /*\n  Export Quill to be able to call `register`\n  */\n  static Quill = Quill;\n\n  /*\n  Changing one of these props should cause a full re-render and a\n  re-instantiation of the Quill editor.\n  */\n  dirtyProps: (keyof ReactQuillProps)[] = [\n    'modules',\n    'formats',\n    'bounds',\n    'theme',\n    'children',\n  ]\n\n  /*\n  Changing one of these props should cause a regular update. These are mostly\n  props that act on the container, rather than the quillized editing area.\n  */\n  cleanProps: (keyof ReactQuillProps)[] = [\n    'id',\n    'className',\n    'style',\n    'placeholder',\n    'tabIndex',\n    'onChange',\n    'onChangeSelection',\n    'onFocus',\n    'onBlur',\n    'onKeyPress',\n    'onKeyDown',\n    'onKeyUp',\n  ]\n\n  static defaultProps = {\n    theme: 'snow',\n    modules: {},\n    readOnly: false,\n  }\n\n  state: ReactQuillState = {\n    generation: 0,\n  }\n\n  /*\n  The Quill Editor instance.\n  */\n  editor?: Quill\n\n  /*\n  Reference to the element holding the Quill editing area.\n  */\n  editingArea?: React.ReactInstance | null\n\n  /*\n  Tracks the internal value of the Quill editor\n  */\n  value: Value\n\n  /*\n  Tracks the internal selection of the Quill editor\n  */\n  selection: Range = null\n\n  /*\n  Used to compare whether deltas from `onChange` are being used as `value`.\n  */\n  lastDeltaChangeSet?: DeltaStatic\n\n  /*\n  Stores the contents of the editor to be restored after regeneration.\n  */\n  regenerationSnapshot?: {\n    delta: DeltaStatic,\n    selection: Range,\n  }\n\n  /*\n  A weaker, unprivileged proxy for the editor that does not allow accidentally\n  modifying editor state.\n  */\n  unprivilegedEditor?: UnprivilegedEditor\n\n  constructor(props: ReactQuillProps) {\n    super(props);\n    const value = this.isControlled()? props.value : props.defaultValue;\n    this.value = value ?? '';\n  }\n\n  validateProps(props: ReactQuillProps): void {\n    if (React.Children.count(props.children) > 1) throw new Error(\n      'The Quill editing area can only be composed of a single React element.'\n    );\n\n    if (React.Children.count(props.children)) {\n      const child = React.Children.only(props.children);\n      if (child?.type === 'textarea') throw new Error(\n        'Quill does not support editing on a <textarea>. Use a <div> instead.'\n      );\n    }\n\n    if (\n      this.lastDeltaChangeSet &&\n      props.value === this.lastDeltaChangeSet\n    ) throw new Error(\n      'You are passing the `delta` object from the `onChange` event back ' +\n      'as `value`. You most probably want `editor.getContents()` instead. ' +\n      'See: https://github.com/zenoamaro/react-quill#using-deltas'\n    );\n  }\n\n  shouldComponentUpdate(nextProps: ReactQuillProps, nextState: ReactQuillState) {\n    this.validateProps(nextProps);\n\n    // If the editor hasn't been instantiated yet, or the component has been\n    // regenerated, we already know we should update.\n    if (!this.editor || this.state.generation !== nextState.generation) {\n      return true;\n    }\n\n    // Handle value changes in-place\n    if ('value' in nextProps) {\n      const prevContents = this.getEditorContents();\n      const nextContents = nextProps.value ?? '';\n\n      // NOTE: Seeing that Quill is missing a way to prevent edits, we have to\n      //       settle for a hybrid between controlled and uncontrolled mode. We\n      //       can't prevent the change, but we'll still override content\n      //       whenever `value` differs from current state.\n      // NOTE: Comparing an HTML string and a Quill Delta will always trigger a\n      //       change, regardless of whether they represent the same document.\n      if (!this.isEqualValue(nextContents, prevContents)) {\n        this.setEditorContents(this.editor, nextContents);\n      }\n    }\n\n    // Handle read-only changes in-place\n    if (nextProps.readOnly !== this.props.readOnly) {\n      this.setEditorReadOnly(this.editor, nextProps.readOnly!);\n    }\n\n    // Clean and Dirty props require a render\n    return [...this.cleanProps, ...this.dirtyProps].some((prop) => {\n      return !isEqual(nextProps[prop], this.props[prop]);\n    });\n  }\n\n  shouldComponentRegenerate(nextProps: ReactQuillProps): boolean {\n    // Whenever a `dirtyProp` changes, the editor needs reinstantiation.\n    return this.dirtyProps.some((prop) => {\n      return !isEqual(nextProps[prop], this.props[prop]);\n    });\n  }\n\n  componentDidMount() {\n    this.instantiateEditor();\n    this.setEditorContents(this.editor!, this.getEditorContents());\n  }\n\n  componentWillUnmount() {\n    this.destroyEditor();\n  }\n\n  componentDidUpdate(prevProps: ReactQuillProps, prevState: ReactQuillState) {\n    // If we're changing one of the `dirtyProps`, the entire Quill Editor needs\n    // to be re-instantiated. Regenerating the editor will cause the whole tree,\n    // including the container, to be cleaned up and re-rendered from scratch.\n    // Store the contents so they can be restored later.\n    if (this.editor && this.shouldComponentRegenerate(prevProps)) {\n      const delta = this.editor.getContents();\n      const selection = this.editor.getSelection();\n      this.regenerationSnapshot = {delta, selection};\n      this.setState({generation: this.state.generation + 1});\n      this.destroyEditor();\n    }\n\n    // The component has been regenerated, so it must be re-instantiated, and\n    // its content must be restored to the previous values from the snapshot.\n    if (this.state.generation !== prevState.generation) {\n      const {delta, selection} = this.regenerationSnapshot!;\n      delete this.regenerationSnapshot;\n      this.instantiateEditor();\n      const editor = this.editor!;\n      editor.setContents(delta);\n      postpone(() => this.setEditorSelection(editor, selection));\n    }\n  }\n\n  instantiateEditor(): void {\n    if (this.editor) {\n      this.hookEditor(this.editor);\n    } else {\n      this.editor = this.createEditor(\n        this.getEditingArea(),\n        this.getEditorConfig()\n      );\n    }\n  }\n\n  destroyEditor(): void {\n    if (!this.editor) return;\n    this.unhookEditor(this.editor);\n  }\n\n  /*\n  We consider the component to be controlled if `value` is being sent in props.\n  */\n  isControlled(): boolean {\n    return 'value' in this.props;\n  }\n\n  getEditorConfig(): QuillOptions {\n    return {\n      bounds: this.props.bounds,\n      formats: this.props.formats,\n      modules: this.props.modules,\n      placeholder: this.props.placeholder,\n      readOnly: this.props.readOnly,\n      scrollingContainer: this.props.scrollingContainer,\n      tabIndex: this.props.tabIndex,\n      theme: this.props.theme,\n    };\n  }\n\n  getEditor(): Quill {\n    if (!this.editor) throw new Error('Accessing non-instantiated editor');\n    return this.editor;\n  }\n\n  /**\n  Creates an editor on the given element. The editor will be passed the\n  configuration, have its events bound,\n  */\n  createEditor(element: Element, config: QuillOptions) {\n    const editor = new Quill(element, config);\n    if (config.tabIndex != null) {\n      this.setEditorTabIndex(editor, config.tabIndex);\n    }\n    this.hookEditor(editor);\n    return editor;\n  }\n\n  hookEditor(editor: Quill) {\n    // Expose the editor on change events via a weaker, unprivileged proxy\n    // object that does not allow accidentally modifying editor state.\n    this.unprivilegedEditor = this.makeUnprivilegedEditor(editor);\n    // Using `editor-change` allows picking up silent updates, like selection\n    // changes on typing.\n    editor.on('editor-change', this.onEditorChange);\n  }\n\n  unhookEditor(editor: Quill) {\n    editor.off('editor-change', this.onEditorChange);\n  }\n\n  getEditorContents(): Value {\n    return this.value;\n  }\n\n  getEditorSelection(): Range {\n    return this.selection;\n  }\n\n  /*\n  True if the value is a Delta instance or a Delta look-alike.\n  */\n  isDelta(value: any): boolean {\n    return value && value.ops;\n  }\n\n  /*\n  Special comparison function that knows how to compare Deltas.\n  */\n  isEqualValue(value: any, nextValue: any): boolean {\n    if (this.isDelta(value) && this.isDelta(nextValue)) {\n      return isEqual(value.ops, nextValue.ops);\n    } else {\n      return isEqual(value, nextValue);\n    }\n  }\n\n  /*\n  Replace the contents of the editor, but keep the previous selection hanging\n  around so that the cursor won't move.\n  */\n  setEditorContents(editor: Quill, value: Value) {\n    this.value = value;\n    const sel = this.getEditorSelection();\n    if (typeof value === 'string') {\n      editor.setContents(editor.clipboard.convert(value));\n    } else {\n      editor.setContents(value);\n    }\n    postpone(() => this.setEditorSelection(editor, sel));\n  }\n\n  setEditorSelection(editor: Quill, range: Range) {\n    this.selection = range;\n    if (range) {\n      // Validate bounds before applying.\n      const length = editor.getLength();\n      range.index = Math.max(0, Math.min(range.index, length-1));\n      range.length = Math.max(0, Math.min(range.length, (length-1) - range.index));\n      editor.setSelection(range);\n    }\n  }\n\n  setEditorTabIndex(editor: Quill, tabIndex: number) {\n    if (editor?.scroll?.domNode) {\n      (editor.scroll.domNode as HTMLElement).tabIndex = tabIndex;\n    }\n  }\n\n  setEditorReadOnly(editor: Quill, value: boolean) {\n    if (value) {\n      editor.disable();\n    } else {\n      editor.enable();\n    }\n  }\n\n  /*\n  Returns a weaker, unprivileged proxy object that only exposes read-only\n  accessors found on the editor instance, without any state-modifying methods.\n  */\n  makeUnprivilegedEditor(editor: Quill) {\n    const e = editor;\n    return {\n      getHTML:      () => e.root.innerHTML,\n      getLength:    e.getLength.bind(e),\n      getText:      e.getText.bind(e),\n      getContents:  e.getContents.bind(e),\n      getSelection: e.getSelection.bind(e),\n      getBounds:    e.getBounds.bind(e),\n    };\n  }\n\n  getEditingArea(): Element {\n    if (!this.editingArea) {\n      throw new Error('Instantiating on missing editing area');\n    }\n    const element = ReactDOM.findDOMNode(this.editingArea);\n    if (!element) {\n      throw new Error('Cannot find element for editing area');\n    }\n    if (element.nodeType === 3) {\n      throw new Error('Editing area cannot be a text node');\n    }\n    return element as Element;\n  }\n\n  /*\n  Renders an editor area, unless it has been provided one to clone.\n  */\n  renderEditingArea(): JSX.Element {\n    const {children, preserveWhitespace} = this.props;\n    const {generation} = this.state;\n\n    const properties = {\n      key: generation,\n      ref: (instance: React.ReactInstance | null) => {\n        this.editingArea = instance\n      },\n    };\n\n    if (React.Children.count(children)) {\n      return React.cloneElement(\n        React.Children.only(children)!,\n        properties\n      );\n    }\n\n    return preserveWhitespace ?\n      <pre {...properties}/> :\n      <div {...properties}/>;\n  }\n\n  render() {\n    return (\n      <div\n        id={this.props.id}\n        style={this.props.style}\n        key={this.state.generation}\n        className={`quill ${this.props.className ?? ''}`}\n        onKeyPress={this.props.onKeyPress}\n        onKeyDown={this.props.onKeyDown}\n        onKeyUp={this.props.onKeyUp}\n      >\n        {this.renderEditingArea()}\n      </div>\n    );\n  }\n\n  onEditorChange = (\n    eventName: 'text-change' | 'selection-change',\n    rangeOrDelta: Range | DeltaStatic,\n    oldRangeOrDelta: Range | DeltaStatic,\n    source: Sources,\n  ) => {\n    if (eventName === 'text-change') {\n      this.onEditorChangeText?.(\n        this.editor!.root.innerHTML,\n        rangeOrDelta as DeltaStatic,\n        source,\n        this.unprivilegedEditor!\n      );\n    } else if (eventName === 'selection-change') {\n      this.onEditorChangeSelection?.(\n        rangeOrDelta as RangeStatic,\n        source,\n        this.unprivilegedEditor!\n      );\n    }\n  };\n\n  onEditorChangeText(\n    value: string,\n    delta: DeltaStatic,\n    source: Sources,\n    editor: UnprivilegedEditor,\n  ): void {\n    if (!this.editor) return;\n\n    // We keep storing the same type of value as what the user gives us,\n    // so that value comparisons will be more stable and predictable.\n    const nextContents = this.isDelta(this.value)\n      ? editor.getContents()\n      : editor.getHTML();\n\n    if (nextContents !== this.getEditorContents()) {\n      // Taint this `delta` object, so we can recognize whether the user\n      // is trying to send it back as `value`, preventing a likely loop.\n      this.lastDeltaChangeSet = delta;\n\n      this.value = nextContents;\n      this.props.onChange?.(value, delta, source, editor);\n    }\n  }\n\n  onEditorChangeSelection(\n    nextSelection: RangeStatic,\n    source: Sources,\n    editor: UnprivilegedEditor,\n  ): void {\n    if (!this.editor) return;\n    const currentSelection = this.getEditorSelection();\n    const hasGainedFocus = !currentSelection && nextSelection;\n    const hasLostFocus = currentSelection && !nextSelection;\n\n    if (isEqual(nextSelection, currentSelection)) return;\n\n    this.selection = nextSelection;\n    this.props.onChangeSelection?.(nextSelection, source, editor);\n\n    if (hasGainedFocus) {\n      this.props.onFocus?.(nextSelection, source, editor);\n    } else if (hasLostFocus) {\n      this.props.onBlur?.(currentSelection, source, editor);\n    }\n  }\n\n  focus(): void {\n    if (!this.editor) return;\n    this.editor.focus();\n  }\n\n  blur(): void {\n    if (!this.editor) return;\n    this.selection = null;\n    this.editor.blur();\n  }\n}\n\n/*\nSmall helper to execute a function in the next micro-tick.\n*/\nfunction postpone(fn: (value: void) => void) {\n  Promise.resolve().then(fn);\n}\n\n// Compatibility Export to avoid `require(...).default` on CommonJS.\n// See: https://github.com/Microsoft/TypeScript/issues/2719\nexport = ReactQuill;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}