{"ast":null,"code":"var _jsxFileName = \"/Users/jieun/Desktop/main-project/idle/src/components/Input/InputSelectBox.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setAreaFilter, setSearchValue } from '../../actions/areaFilterActions';\nimport cls from '../../utils/tailwind';\nimport { ReactComponent as ArrowOpen } from '../../images/arrow-open.svg';\nimport { ReactComponent as ArrowClose } from '../../images/arrow-close.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InputSelectBox(props) {\n  _s();\n  const {\n    options,\n    placeholder,\n    className,\n    width\n  } = props;\n  // options: 셀렉트박스 펼칠 때 나오는 옵션 리스트. <InputSelectBox options=\"a,b,c\" />형태로 입력\n  // className: button에 추가\n  // width: <InputSelectBox width=\"w-500\" /> 형태로 입력\n  const profiles = options.split(',');\n  const [activeIndex, setActiveIndex] = useState(null);\n  const [selectUser, setSelectUser] = useState(placeholder);\n  const [focus, setFocus] = useState(false);\n  const areaFilter = useSelector(state => state.areaFilter);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (typeof areaFilter === 'number') {\n      setSelectUser(profiles[areaFilter]);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [areaFilter]);\n  const profileActive = event => {\n    const index = Number(event.target.className.split(' ')[1].slice(-1));\n    setActiveIndex(index);\n    setSelectUser(profiles[index]);\n    dispatch(setAreaFilter(index));\n    setFocus(false);\n    dispatch(setSearchValue(''));\n  };\n  const handleButtonClick = () => {\n    setFocus(!focus);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButtonClick,\n      type: \"button\",\n      className: cls('input-default input-select-default ', className, width),\n      children: [selectUser, focus ? /*#__PURE__*/_jsxDEV(ArrowClose, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(ArrowOpen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), focus && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cls('absolute left-0 top-[58px] z-50 flex flex-col items-start justify-center rounded-[10px] bg-white shadow-dropDownShadow', width),\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"ul profile w-full px-8 py-12 text-left\",\n        children: profiles.map((profile, idx) => {\n          const activeClass = activeIndex === idx ? 'font-bold' : '';\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `li profile${idx} w-full cursor-pointer p-12 text-14 ${activeClass} rounded-lg hover:bg-black-025`,\n            onClick: profileActive,\n            role: \"presentation\",\n            children: profile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(InputSelectBox, \"435zMD+hGg85nP74DYBjW/8zcfQ=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = InputSelectBox;\nexport default InputSelectBox;\nvar _c;\n$RefreshReg$(_c, \"InputSelectBox\");","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","setAreaFilter","setSearchValue","cls","ReactComponent","ArrowOpen","ArrowClose","jsxDEV","_jsxDEV","InputSelectBox","props","_s","options","placeholder","className","width","profiles","split","activeIndex","setActiveIndex","selectUser","setSelectUser","focus","setFocus","areaFilter","state","dispatch","profileActive","event","index","Number","target","slice","handleButtonClick","children","onClick","type","fileName","_jsxFileName","lineNumber","columnNumber","map","profile","idx","activeClass","role","_c","$RefreshReg$"],"sources":["/Users/jieun/Desktop/main-project/idle/src/components/Input/InputSelectBox.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setAreaFilter, setSearchValue } from '../../actions/areaFilterActions';\nimport cls from '../../utils/tailwind';\nimport { ReactComponent as ArrowOpen } from '../../images/arrow-open.svg';\nimport { ReactComponent as ArrowClose } from '../../images/arrow-close.svg';\n\nfunction InputSelectBox(props) {\n  const { options, placeholder, className, width } = props;\n  // options: 셀렉트박스 펼칠 때 나오는 옵션 리스트. <InputSelectBox options=\"a,b,c\" />형태로 입력\n  // className: button에 추가\n  // width: <InputSelectBox width=\"w-500\" /> 형태로 입력\n  const profiles = options.split(',');\n  const [activeIndex, setActiveIndex] = useState(null);\n  const [selectUser, setSelectUser] = useState(placeholder);\n  const [focus, setFocus] = useState(false);\n  const areaFilter = useSelector(state => state.areaFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (typeof areaFilter === 'number') {\n      setSelectUser(profiles[areaFilter]);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [areaFilter]);\n\n  const profileActive = event => {\n    const index = Number(event.target.className.split(' ')[1].slice(-1));\n    setActiveIndex(index);\n    setSelectUser(profiles[index]);\n    dispatch(setAreaFilter(index));\n    setFocus(false);\n    dispatch(setSearchValue(''));\n  };\n\n  const handleButtonClick = () => {\n    setFocus(!focus);\n  };\n\n  return (\n    <div className=\"relative\">\n      <button\n        onClick={handleButtonClick}\n        type=\"button\"\n        className={cls('input-default input-select-default ', className, width)}\n      >\n        {selectUser}\n        {focus ? <ArrowClose /> : <ArrowOpen />}\n      </button>\n      {focus && (\n        <div\n          className={cls(\n            'absolute left-0 top-[58px] z-50 flex flex-col items-start justify-center rounded-[10px] bg-white shadow-dropDownShadow',\n            width,\n          )}\n        >\n          <ul className=\"ul profile w-full px-8 py-12 text-left\">\n            {profiles.map((profile, idx) => {\n              const activeClass = activeIndex === idx ? 'font-bold' : '';\n\n              return (\n                <li\n                  className={`li profile${idx} w-full cursor-pointer p-12 text-14 ${activeClass} rounded-lg hover:bg-black-025`}\n                  onClick={profileActive}\n                  role=\"presentation\"\n                >\n                  {profile}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\nexport default InputSelectBox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}